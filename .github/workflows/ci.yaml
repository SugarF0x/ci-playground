name: ci

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'package.json'
      - 'CHANGELOG.md'

env:
  S3_BUCKET: ci-playground.sugar-fox.ru
  DIST_PATH: .output/public/
  RELEASE_PATH: output.zip

jobs:
  setup:
    name: Checkout & generate changelog
    runs-on: ubuntu-latest

    outputs:
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          git-message: 'chore(release): {version}'
          release-count: 0

  build:
    name: Build distributive
    needs: [ setup ]
    if: ${{ needs.setup.outputs.skipped == 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - name: Setup yarn
        run: npm install -g yarn

      - name: Setup Nodejs with yarn caching
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Generate
        run: yarn generate

      - name: Zip output
        run: yarn zip

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: $DIST_PATH
          retention-days: 3

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: $RELEASE_PATH
          retention-days: 3

  release:
    name: Create release
    needs: [ setup, build ]
    if: ${{ needs.setup.outputs.skipped == 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: release

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.tag }}
          name: ${{ needs.setup.outputs.tag }}
          body: ${{ needs.setup.outputs.clean_changelog }}
          files: $RELEASE_PATH

  deploy:
    name: Deploy distributive
    needs: [ setup, build ]
    if: ${{ needs.setup.outputs.skipped == 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Download distributive artifact
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Upload to bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_S3_ENDPOINT: https://storage.yandexcloud.net
          AWS_S3_BUCKET: $S3_BUCKET
          AWS_REGION: ru-central1
